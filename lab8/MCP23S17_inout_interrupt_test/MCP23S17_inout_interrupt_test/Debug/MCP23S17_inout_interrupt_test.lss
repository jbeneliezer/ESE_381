
MCP23S17_inout_interrupt_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00804000  00804000  000002bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000248  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00804000  00804000  000002bc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002bc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  0000032c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000033e4  00000000  00000000  00000364  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002e31  00000000  00000000  00003748  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003f3  00000000  00000000  00006579  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000009c  00000000  00000000  0000696c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001880  00000000  00000000  00006a08  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000f9  00000000  00000000  00008288  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00008381  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__ctors_end>
   4:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
   8:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
   c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  10:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  14:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  18:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  1c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  20:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  24:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  28:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  2c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  30:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  34:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  38:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  3c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  40:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  44:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  48:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  4c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  50:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  54:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  58:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  5c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  60:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  64:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  68:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  6c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  70:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  74:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  78:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  7c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  80:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  84:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  88:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  8c:	0c 94 ab 00 	jmp	0x156	; 0x156 <__vector_35>
  90:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  94:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  98:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  9c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  a0:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  a4:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  a8:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  ac:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  b0:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  b4:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  b8:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  bc:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  c0:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  c4:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  c8:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  cc:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  d0:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  d4:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  d8:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  dc:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  e0:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  e4:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  e8:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  ec:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
  f0:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>

000000f4 <__ctors_end>:
  f4:	11 24       	eor	r1, r1
  f6:	1f be       	out	0x3f, r1	; 63
  f8:	cf ef       	ldi	r28, 0xFF	; 255
  fa:	cd bf       	out	0x3d, r28	; 61
  fc:	df e7       	ldi	r29, 0x7F	; 127
  fe:	de bf       	out	0x3e, r29	; 62

00000100 <__do_clear_bss>:
 100:	20 e4       	ldi	r18, 0x40	; 64
 102:	a0 e0       	ldi	r26, 0x00	; 0
 104:	b0 e4       	ldi	r27, 0x40	; 64
 106:	01 c0       	rjmp	.+2      	; 0x10a <.do_clear_bss_start>

00000108 <.do_clear_bss_loop>:
 108:	1d 92       	st	X+, r1

0000010a <.do_clear_bss_start>:
 10a:	a1 30       	cpi	r26, 0x01	; 1
 10c:	b2 07       	cpc	r27, r18
 10e:	e1 f7       	brne	.-8      	; 0x108 <.do_clear_bss_loop>
 110:	0e 94 ff 00 	call	0x1fe	; 0x1fe <main>
 114:	0c 94 22 01 	jmp	0x244	; 0x244 <_exit>

00000118 <__bad_interrupt>:
 118:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000011c <MCP23S17_SPI_write>:
	
}

void MCP23S17_SPI_write(uint8_t opcode, uint8_t addr, uint8_t data)
{
	PORTF.OUT &= ~PIN2_bm;
 11c:	e0 ea       	ldi	r30, 0xA0	; 160
 11e:	f4 e0       	ldi	r31, 0x04	; 4
 120:	94 81       	ldd	r25, Z+4	; 0x04
 122:	9b 7f       	andi	r25, 0xFB	; 251
 124:	94 83       	std	Z+4, r25	; 0x04
	SPI0.DATA = opcode;
 126:	80 93 44 09 	sts	0x0944, r24	; 0x800944 <__TEXT_REGION_LENGTH__+0x7e0944>
	while ((SPI0.INTFLAGS & PIN7_bm) == 0x00) {}
 12a:	80 91 43 09 	lds	r24, 0x0943	; 0x800943 <__TEXT_REGION_LENGTH__+0x7e0943>
 12e:	88 23       	and	r24, r24
 130:	e4 f7       	brge	.-8      	; 0x12a <MCP23S17_SPI_write+0xe>
	SPI0.DATA = addr;
 132:	60 93 44 09 	sts	0x0944, r22	; 0x800944 <__TEXT_REGION_LENGTH__+0x7e0944>
	while ((SPI0.INTFLAGS & PIN7_bm) == 0x00) {}
 136:	80 91 43 09 	lds	r24, 0x0943	; 0x800943 <__TEXT_REGION_LENGTH__+0x7e0943>
 13a:	88 23       	and	r24, r24
 13c:	e4 f7       	brge	.-8      	; 0x136 <MCP23S17_SPI_write+0x1a>
	SPI0.DATA = data;
 13e:	40 93 44 09 	sts	0x0944, r20	; 0x800944 <__TEXT_REGION_LENGTH__+0x7e0944>
	while ((SPI0.INTFLAGS & PIN7_bm) == 0x00) {}
 142:	80 91 43 09 	lds	r24, 0x0943	; 0x800943 <__TEXT_REGION_LENGTH__+0x7e0943>
 146:	88 23       	and	r24, r24
 148:	e4 f7       	brge	.-8      	; 0x142 <MCP23S17_SPI_write+0x26>
	PORTF.OUT |= PIN2_bm;
 14a:	e0 ea       	ldi	r30, 0xA0	; 160
 14c:	f4 e0       	ldi	r31, 0x04	; 4
 14e:	84 81       	ldd	r24, Z+4	; 0x04
 150:	84 60       	ori	r24, 0x04	; 4
 152:	84 83       	std	Z+4, r24	; 0x04
 154:	08 95       	ret

00000156 <__vector_35>:
		__asm("nop");
	}
}


ISR(PORTF_PORT_vect) {
 156:	1f 92       	push	r1
 158:	0f 92       	push	r0
 15a:	0f b6       	in	r0, 0x3f	; 63
 15c:	0f 92       	push	r0
 15e:	11 24       	eor	r1, r1
 160:	0b b6       	in	r0, 0x3b	; 59
 162:	0f 92       	push	r0
 164:	2f 93       	push	r18
 166:	3f 93       	push	r19
 168:	4f 93       	push	r20
 16a:	5f 93       	push	r21
 16c:	6f 93       	push	r22
 16e:	7f 93       	push	r23
 170:	8f 93       	push	r24
 172:	9f 93       	push	r25
 174:	af 93       	push	r26
 176:	bf 93       	push	r27
 178:	ef 93       	push	r30
 17a:	ff 93       	push	r31
	MCP23S17_SPI_write(READ_opcode, GPIOAaddr_b1, 0x00);
 17c:	40 e0       	ldi	r20, 0x00	; 0
 17e:	69 e0       	ldi	r22, 0x09	; 9
 180:	81 e4       	ldi	r24, 0x41	; 65
 182:	0e 94 8e 00 	call	0x11c	; 0x11c <MCP23S17_SPI_write>
	i = SPI0.DATA;
 186:	80 91 44 09 	lds	r24, 0x0944	; 0x800944 <__TEXT_REGION_LENGTH__+0x7e0944>
 18a:	80 93 00 40 	sts	0x4000, r24	; 0x804000 <__DATA_REGION_ORIGIN__>
	MCP23S17_SPI_write(WRITE_opcode, OLATBaddr_b1, i);
 18e:	40 91 00 40 	lds	r20, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
 192:	6a e1       	ldi	r22, 0x1A	; 26
 194:	80 e4       	ldi	r24, 0x40	; 64
 196:	0e 94 8e 00 	call	0x11c	; 0x11c <MCP23S17_SPI_write>
	PORTF.INTFLAGS |= PIN3_bm;
 19a:	e0 ea       	ldi	r30, 0xA0	; 160
 19c:	f4 e0       	ldi	r31, 0x04	; 4
 19e:	81 85       	ldd	r24, Z+9	; 0x09
 1a0:	88 60       	ori	r24, 0x08	; 8
 1a2:	81 87       	std	Z+9, r24	; 0x09
}
 1a4:	ff 91       	pop	r31
 1a6:	ef 91       	pop	r30
 1a8:	bf 91       	pop	r27
 1aa:	af 91       	pop	r26
 1ac:	9f 91       	pop	r25
 1ae:	8f 91       	pop	r24
 1b0:	7f 91       	pop	r23
 1b2:	6f 91       	pop	r22
 1b4:	5f 91       	pop	r21
 1b6:	4f 91       	pop	r20
 1b8:	3f 91       	pop	r19
 1ba:	2f 91       	pop	r18
 1bc:	0f 90       	pop	r0
 1be:	0b be       	out	0x3b, r0	; 59
 1c0:	0f 90       	pop	r0
 1c2:	0f be       	out	0x3f, r0	; 63
 1c4:	0f 90       	pop	r0
 1c6:	1f 90       	pop	r1
 1c8:	18 95       	reti

000001ca <MCP23S17_SPI_init>:

void MCP23S17_SPI_init()
{
	MCP23S17_SPI_write(WRITE_opcode, IOCONaddr_b0, 0x80);
 1ca:	40 e8       	ldi	r20, 0x80	; 128
 1cc:	6a e0       	ldi	r22, 0x0A	; 10
 1ce:	80 e4       	ldi	r24, 0x40	; 64
 1d0:	0e 94 8e 00 	call	0x11c	; 0x11c <MCP23S17_SPI_write>
	MCP23S17_SPI_write(WRITE_opcode, IODIRAaddr_b1, 0xFF);
 1d4:	4f ef       	ldi	r20, 0xFF	; 255
 1d6:	60 e0       	ldi	r22, 0x00	; 0
 1d8:	80 e4       	ldi	r24, 0x40	; 64
 1da:	0e 94 8e 00 	call	0x11c	; 0x11c <MCP23S17_SPI_write>
	MCP23S17_SPI_write(WRITE_opcode, IODIRBaddr_b1, 0x00);
 1de:	40 e0       	ldi	r20, 0x00	; 0
 1e0:	60 e1       	ldi	r22, 0x10	; 16
 1e2:	80 e4       	ldi	r24, 0x40	; 64
 1e4:	0e 94 8e 00 	call	0x11c	; 0x11c <MCP23S17_SPI_write>
	MCP23S17_SPI_write(WRITE_opcode, GPPUAaddr_b1, 0xFF);
 1e8:	4f ef       	ldi	r20, 0xFF	; 255
 1ea:	66 e0       	ldi	r22, 0x06	; 6
 1ec:	80 e4       	ldi	r24, 0x40	; 64
 1ee:	0e 94 8e 00 	call	0x11c	; 0x11c <MCP23S17_SPI_write>
	MCP23S17_SPI_write(WRITE_opcode, GPINTENA, 0xFF);
 1f2:	4f ef       	ldi	r20, 0xFF	; 255
 1f4:	62 e0       	ldi	r22, 0x02	; 2
 1f6:	80 e4       	ldi	r24, 0x40	; 64
 1f8:	0e 94 8e 00 	call	0x11c	; 0x11c <MCP23S17_SPI_write>
 1fc:	08 95       	ret

000001fe <main>:

volatile uint8_t i;

int main(void)
{
	PORTA.DIRSET = PIN4_bm | PIN6_bm | PIN7_bm;
 1fe:	a0 e0       	ldi	r26, 0x00	; 0
 200:	b4 e0       	ldi	r27, 0x04	; 4
 202:	80 ed       	ldi	r24, 0xD0	; 208
 204:	11 96       	adiw	r26, 0x01	; 1
 206:	8c 93       	st	X, r24
 208:	11 97       	sbiw	r26, 0x01	; 1
	PORTA.DIRCLR = PIN5_bm;
 20a:	80 e2       	ldi	r24, 0x20	; 32
 20c:	12 96       	adiw	r26, 0x02	; 2
 20e:	8c 93       	st	X, r24
 210:	12 97       	sbiw	r26, 0x02	; 2
	PORTF.DIRSET = PIN2_bm;
 212:	e0 ea       	ldi	r30, 0xA0	; 160
 214:	f4 e0       	ldi	r31, 0x04	; 4
 216:	84 e0       	ldi	r24, 0x04	; 4
 218:	81 83       	std	Z+1, r24	; 0x01
	PORTF.DIRCLR = PIN3_bm;
 21a:	88 e0       	ldi	r24, 0x08	; 8
 21c:	82 83       	std	Z+2, r24	; 0x02
	PORTF.PIN3CTRL = PORT_ISC_LEVEL_gc;
 21e:	85 e0       	ldi	r24, 0x05	; 5
 220:	83 8b       	std	Z+19, r24	; 0x13
	
	SPI0.CTRLA = SPI_ENABLE_bm | SPI_MASTER_bm | SPI_PRESC_DIV4_gc;
 222:	81 e2       	ldi	r24, 0x21	; 33
 224:	80 93 40 09 	sts	0x0940, r24	; 0x800940 <__TEXT_REGION_LENGTH__+0x7e0940>
	
	PORTA.OUT &= ~PIN7_bm;
 228:	14 96       	adiw	r26, 0x04	; 4
 22a:	8c 91       	ld	r24, X
 22c:	14 97       	sbiw	r26, 0x04	; 4
 22e:	8f 77       	andi	r24, 0x7F	; 127
 230:	14 96       	adiw	r26, 0x04	; 4
 232:	8c 93       	st	X, r24
	PORTF.OUT |= PIN2_bm;
 234:	84 81       	ldd	r24, Z+4	; 0x04
 236:	84 60       	ori	r24, 0x04	; 4
 238:	84 83       	std	Z+4, r24	; 0x04
	
	MCP23S17_SPI_init();
 23a:	0e 94 e5 00 	call	0x1ca	; 0x1ca <MCP23S17_SPI_init>
	
	sei();
 23e:	78 94       	sei
	
	while (1)
	{
		__asm("nop");
 240:	00 00       	nop
 242:	fe cf       	rjmp	.-4      	; 0x240 <__EEPROM_REGION_LENGTH__+0x40>

00000244 <_exit>:
 244:	f8 94       	cli

00000246 <__stop_program>:
 246:	ff cf       	rjmp	.-2      	; 0x246 <__stop_program>
