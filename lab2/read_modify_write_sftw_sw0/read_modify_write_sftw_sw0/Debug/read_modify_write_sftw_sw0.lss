
read_modify_write_sftw_sw0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00804000  00804000  000001e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000192  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001e6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000218  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000258  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000300f  00000000  00000000  00000278  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002d4a  00000000  00000000  00003287  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000031e  00000000  00000000  00005fd1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000062f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000164a  00000000  00000000  00006314  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000032  00000000  00000000  0000795e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00007990  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__ctors_end>
   4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
   8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
   c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  10:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  14:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  18:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  1c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  20:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  24:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  28:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  2c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  30:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  34:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  38:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  3c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  40:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  44:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  48:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  4c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  50:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  54:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  58:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  5c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  60:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  64:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  68:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  6c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  70:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  74:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  78:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  7c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  80:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  84:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  88:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  8c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  90:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  94:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  98:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  9c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  ac:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  bc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  cc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  dc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  ec:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  f0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>

000000f4 <__ctors_end>:
  f4:	11 24       	eor	r1, r1
  f6:	1f be       	out	0x3f, r1	; 63
  f8:	cf ef       	ldi	r28, 0xFF	; 255
  fa:	cd bf       	out	0x3d, r28	; 61
  fc:	df e7       	ldi	r29, 0x7F	; 127
  fe:	de bf       	out	0x3e, r29	; 62
 100:	0e 94 86 00 	call	0x10c	; 0x10c <main>
 104:	0c 94 c7 00 	jmp	0x18e	; 0x18e <_exit>

00000108 <__bad_interrupt>:
 108:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000010c <main>:
#define PORTD_OUTPUT_CONFIGURATION_gc 0xFF

int main(void)
{
	
	PORTA_DIR &= PORTA_INPUT_CONFIGURATION_gc;
 10c:	e0 e0       	ldi	r30, 0x00	; 0
 10e:	f4 e0       	ldi	r31, 0x04	; 4
 110:	80 81       	ld	r24, Z
 112:	83 70       	andi	r24, 0x03	; 3
 114:	80 83       	st	Z, r24
	PORTC_DIR &= PORTC_INPUT_CONFIGURATON_gc;
 116:	e0 e4       	ldi	r30, 0x40	; 64
 118:	f4 e0       	ldi	r31, 0x04	; 4
 11a:	80 81       	ld	r24, Z
 11c:	8c 7f       	andi	r24, 0xFC	; 252
 11e:	80 83       	st	Z, r24
	PORTD_DIR |= PORTD_OUTPUT_CONFIGURATION_gc;
 120:	e0 e6       	ldi	r30, 0x60	; 96
 122:	f4 e0       	ldi	r31, 0x04	; 4
 124:	80 81       	ld	r24, Z
 126:	8f ef       	ldi	r24, 0xFF	; 255
 128:	80 83       	st	Z, r24
	PORTB_DIR &= ~PIN3_bm;
 12a:	e0 e2       	ldi	r30, 0x20	; 32
 12c:	f4 e0       	ldi	r31, 0x04	; 4
 12e:	80 81       	ld	r24, Z
 130:	87 7f       	andi	r24, 0xF7	; 247
 132:	80 83       	st	Z, r24

	uint8_t* ctrl_ptr = (uint8_t*)&PORTA_PIN2CTRL;

	for (uint8_t i = 0; i < 6; ++i) {
 134:	80 e0       	ldi	r24, 0x00	; 0
 136:	08 c0       	rjmp	.+16     	; 0x148 <main+0x3c>
		*(ctrl_ptr + i) |= PORT_PULLUPEN_bm;
 138:	e8 2f       	mov	r30, r24
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	ee 5e       	subi	r30, 0xEE	; 238
 13e:	fb 4f       	sbci	r31, 0xFB	; 251
 140:	90 81       	ld	r25, Z
 142:	98 60       	ori	r25, 0x08	; 8
 144:	90 83       	st	Z, r25
	PORTD_DIR |= PORTD_OUTPUT_CONFIGURATION_gc;
	PORTB_DIR &= ~PIN3_bm;

	uint8_t* ctrl_ptr = (uint8_t*)&PORTA_PIN2CTRL;

	for (uint8_t i = 0; i < 6; ++i) {
 146:	8f 5f       	subi	r24, 0xFF	; 255
 148:	86 30       	cpi	r24, 0x06	; 6
 14a:	b0 f3       	brcs	.-20     	; 0x138 <main+0x2c>
		*(ctrl_ptr + i) |= PORT_PULLUPEN_bm;
	}

	PORTC_PIN0CTRL |= PORT_PULLUPEN_bm;
 14c:	e0 e5       	ldi	r30, 0x50	; 80
 14e:	f4 e0       	ldi	r31, 0x04	; 4
 150:	80 81       	ld	r24, Z
 152:	88 60       	ori	r24, 0x08	; 8
 154:	80 83       	st	Z, r24
	PORTC_PIN1CTRL |= PORT_PULLUPEN_bm;
 156:	e1 e5       	ldi	r30, 0x51	; 81
 158:	f4 e0       	ldi	r31, 0x04	; 4
 15a:	80 81       	ld	r24, Z
 15c:	88 60       	ori	r24, 0x08	; 8
 15e:	80 83       	st	Z, r24

	uint8_t out;

	while (1)
	{
		out = (PORTA_IN | PORTA_INPUT_CONFIGURATION_gc) & (PORTC_IN | PORTC_INPUT_CONFIGURATON_gc);
 160:	90 91 08 04 	lds	r25, 0x0408	; 0x800408 <__TEXT_REGION_LENGTH__+0x7e0408>
 164:	80 91 48 04 	lds	r24, 0x0448	; 0x800448 <__TEXT_REGION_LENGTH__+0x7e0448>
 168:	93 60       	ori	r25, 0x03	; 3
 16a:	8c 6f       	ori	r24, 0xFC	; 252
 16c:	89 23       	and	r24, r25
		PORTD_OUT = (PORTB_IN & PIN3_bm) ? (out | 0x3C) & ((out << 2) | 0xC3): out;
 16e:	90 91 28 04 	lds	r25, 0x0428	; 0x800428 <__TEXT_REGION_LENGTH__+0x7e0428>
 172:	93 ff       	sbrs	r25, 3
 174:	09 c0       	rjmp	.+18     	; 0x188 <main+0x7c>
 176:	28 2f       	mov	r18, r24
 178:	30 e0       	ldi	r19, 0x00	; 0
 17a:	22 0f       	add	r18, r18
 17c:	33 1f       	adc	r19, r19
 17e:	22 0f       	add	r18, r18
 180:	33 1f       	adc	r19, r19
 182:	8c 63       	ori	r24, 0x3C	; 60
 184:	23 6c       	ori	r18, 0xC3	; 195
 186:	82 23       	and	r24, r18
 188:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <__TEXT_REGION_LENGTH__+0x7e0464>
	}
 18c:	e9 cf       	rjmp	.-46     	; 0x160 <main+0x54>

0000018e <_exit>:
 18e:	f8 94       	cli

00000190 <__stop_program>:
 190:	ff cf       	rjmp	.-2      	; 0x190 <__stop_program>
