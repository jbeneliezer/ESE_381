
parallel_in_parallel_out_struct.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00804000  00804000  000001ca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000176  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001ca  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001fc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000023c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000031ca  00000000  00000000  0000025c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002d9d  00000000  00000000  00003426  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000352  00000000  00000000  000061c3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00006518  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001738  00000000  00000000  0000653c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000001f  00000000  00000000  00007c74  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00007c93  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__ctors_end>
   4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
   8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
   c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  10:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  14:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  18:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  1c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  20:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  24:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  28:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  2c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  30:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  34:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  38:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  3c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  40:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  44:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  48:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  4c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  50:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  54:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  58:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  5c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  60:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  64:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  68:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  6c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  70:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  74:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  78:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  7c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  80:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  84:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  88:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  8c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  90:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  94:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  98:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  9c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  ac:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  bc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  cc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  dc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  ec:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  f0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>

000000f4 <__ctors_end>:
  f4:	11 24       	eor	r1, r1
  f6:	1f be       	out	0x3f, r1	; 63
  f8:	cf ef       	ldi	r28, 0xFF	; 255
  fa:	cd bf       	out	0x3d, r28	; 61
  fc:	df e7       	ldi	r29, 0x7F	; 127
  fe:	de bf       	out	0x3e, r29	; 62
 100:	0e 94 86 00 	call	0x10c	; 0x10c <main>
 104:	0c 94 b9 00 	jmp	0x172	; 0x172 <_exit>

00000108 <__bad_interrupt>:
 108:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000010c <main>:
#define PORTD_OUTPUT_CONFIGURATION_gc 0xFF

int main(void)
{
	
	PORTA.DIR &= PORTA_INPUT_CONFIGURATION_gc;
 10c:	e0 e0       	ldi	r30, 0x00	; 0
 10e:	f4 e0       	ldi	r31, 0x04	; 4
 110:	80 81       	ld	r24, Z
 112:	83 70       	andi	r24, 0x03	; 3
 114:	80 83       	st	Z, r24
	PORTC.DIR &= PORTC_INPUT_CONFIGURATON_gc;
 116:	e0 e4       	ldi	r30, 0x40	; 64
 118:	f4 e0       	ldi	r31, 0x04	; 4
 11a:	80 81       	ld	r24, Z
 11c:	8c 7f       	andi	r24, 0xFC	; 252
 11e:	80 83       	st	Z, r24
	PORTD.DIR |= PORTD_OUTPUT_CONFIGURATION_gc;
 120:	e0 e6       	ldi	r30, 0x60	; 96
 122:	f4 e0       	ldi	r31, 0x04	; 4
 124:	80 81       	ld	r24, Z
 126:	8f ef       	ldi	r24, 0xFF	; 255
 128:	80 83       	st	Z, r24

	uint8_t* ctrl_ptr = (uint8_t*)&PORTA.PIN2CTRL;

	for (uint8_t i = 0; i < 6; ++i) {
 12a:	80 e0       	ldi	r24, 0x00	; 0
 12c:	06 c0       	rjmp	.+12     	; 0x13a <main+0x2e>
		*(ctrl_ptr) |= PORT_PULLUPEN_bm;
 12e:	e2 e1       	ldi	r30, 0x12	; 18
 130:	f4 e0       	ldi	r31, 0x04	; 4
 132:	90 81       	ld	r25, Z
 134:	98 60       	ori	r25, 0x08	; 8
 136:	90 83       	st	Z, r25
	PORTC.DIR &= PORTC_INPUT_CONFIGURATON_gc;
	PORTD.DIR |= PORTD_OUTPUT_CONFIGURATION_gc;

	uint8_t* ctrl_ptr = (uint8_t*)&PORTA.PIN2CTRL;

	for (uint8_t i = 0; i < 6; ++i) {
 138:	8f 5f       	subi	r24, 0xFF	; 255
 13a:	86 30       	cpi	r24, 0x06	; 6
 13c:	c0 f3       	brcs	.-16     	; 0x12e <main+0x22>
		*(ctrl_ptr) |= PORT_PULLUPEN_bm;
	}

	PORTC.PIN0CTRL |= PORT_PULLUPEN_bm;
 13e:	e0 e4       	ldi	r30, 0x40	; 64
 140:	f4 e0       	ldi	r31, 0x04	; 4
 142:	80 89       	ldd	r24, Z+16	; 0x10
 144:	88 60       	ori	r24, 0x08	; 8
 146:	80 8b       	std	Z+16, r24	; 0x10
	PORTC.PIN1CTRL |= PORT_PULLUPEN_bm;
 148:	81 89       	ldd	r24, Z+17	; 0x11
 14a:	88 60       	ori	r24, 0x08	; 8
 14c:	81 8b       	std	Z+17, r24	; 0x11
	
	while (1)
	{
		PORTD.OUT |= (PORTA.IN & ~PORTA_INPUT_CONFIGURATION_gc) | (PORTC.IN & ~PORTC_INPUT_CONFIGURATON_gc);
 14e:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <__TEXT_REGION_LENGTH__+0x7e0408>
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	9c 01       	movw	r18, r24
 156:	2c 7f       	andi	r18, 0xFC	; 252
 158:	90 91 48 04 	lds	r25, 0x0448	; 0x800448 <__TEXT_REGION_LENGTH__+0x7e0448>
 15c:	89 2f       	mov	r24, r25
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	83 70       	andi	r24, 0x03	; 3
 162:	82 2b       	or	r24, r18
 164:	93 2b       	or	r25, r19
 166:	e0 e6       	ldi	r30, 0x60	; 96
 168:	f4 e0       	ldi	r31, 0x04	; 4
 16a:	94 81       	ldd	r25, Z+4	; 0x04
 16c:	89 2b       	or	r24, r25
 16e:	84 83       	std	Z+4, r24	; 0x04
 170:	ee cf       	rjmp	.-36     	; 0x14e <main+0x42>

00000172 <_exit>:
 172:	f8 94       	cli

00000174 <__stop_program>:
 174:	ff cf       	rjmp	.-2      	; 0x174 <__stop_program>
