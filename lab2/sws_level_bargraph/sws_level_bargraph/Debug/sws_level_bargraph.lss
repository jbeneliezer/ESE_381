
sws_level_bargraph.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00804000  00804000  000001d6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000182  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001d6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000208  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000248  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000031fd  00000000  00000000  00000268  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002dc4  00000000  00000000  00003465  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000394  00000000  00000000  00006229  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000065c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001723  00000000  00000000  000065e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000006b  00000000  00000000  00007d07  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00007d72  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__ctors_end>
   4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
   8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
   c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  10:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  14:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  18:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  1c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  20:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  24:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  28:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  2c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  30:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  34:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  38:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  3c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  40:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  44:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  48:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  4c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  50:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  54:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  58:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  5c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  60:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  64:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  68:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  6c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  70:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  74:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  78:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  7c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  80:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  84:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  88:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  8c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  90:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  94:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  98:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  9c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  ac:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  bc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  cc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  dc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  ec:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  f0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>

000000f4 <__ctors_end>:
  f4:	11 24       	eor	r1, r1
  f6:	1f be       	out	0x3f, r1	; 63
  f8:	cf ef       	ldi	r28, 0xFF	; 255
  fa:	cd bf       	out	0x3d, r28	; 61
  fc:	df e7       	ldi	r29, 0x7F	; 127
  fe:	de bf       	out	0x3e, r29	; 62
 100:	0e 94 86 00 	call	0x10c	; 0x10c <main>
 104:	0c 94 bf 00 	jmp	0x17e	; 0x17e <_exit>

00000108 <__bad_interrupt>:
 108:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000010c <main>:
{
	uint8_t* ptr = (uint8_t*) &PORTA.PIN2CTRL;
	
	uint8_t switches, leds;
	
	PORTD.DIR |= 0xFF;
 10c:	e0 e6       	ldi	r30, 0x60	; 96
 10e:	f4 e0       	ldi	r31, 0x04	; 4
 110:	80 81       	ld	r24, Z
 112:	8f ef       	ldi	r24, 0xFF	; 255
 114:	80 83       	st	Z, r24
	PORTA.DIR &= 0x03;
 116:	e0 e0       	ldi	r30, 0x00	; 0
 118:	f4 e0       	ldi	r31, 0x04	; 4
 11a:	80 81       	ld	r24, Z
 11c:	83 70       	andi	r24, 0x03	; 3
 11e:	80 83       	st	Z, r24
	PORTC.DIR &= 0xFC;
 120:	e0 e4       	ldi	r30, 0x40	; 64
 122:	f4 e0       	ldi	r31, 0x04	; 4
 124:	80 81       	ld	r24, Z
 126:	8c 7f       	andi	r24, 0xFC	; 252
 128:	80 83       	st	Z, r24
	
	for (uint8_t i = 0; i < 6; ++i) {
 12a:	80 e0       	ldi	r24, 0x00	; 0
 12c:	08 c0       	rjmp	.+16     	; 0x13e <main+0x32>
		*(ptr + i) |= PORT_PULLUPEN_bm;
 12e:	e8 2f       	mov	r30, r24
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	ee 5e       	subi	r30, 0xEE	; 238
 134:	fb 4f       	sbci	r31, 0xFB	; 251
 136:	90 81       	ld	r25, Z
 138:	98 60       	ori	r25, 0x08	; 8
 13a:	90 83       	st	Z, r25
	
	PORTD.DIR |= 0xFF;
	PORTA.DIR &= 0x03;
	PORTC.DIR &= 0xFC;
	
	for (uint8_t i = 0; i < 6; ++i) {
 13c:	8f 5f       	subi	r24, 0xFF	; 255
 13e:	86 30       	cpi	r24, 0x06	; 6
 140:	b0 f3       	brcs	.-20     	; 0x12e <main+0x22>
		*(ptr + i) |= PORT_PULLUPEN_bm;
	}	
	
	PORTC.PIN0CTRL |= PORT_PULLUPEN_bm;
 142:	e0 e4       	ldi	r30, 0x40	; 64
 144:	f4 e0       	ldi	r31, 0x04	; 4
 146:	80 89       	ldd	r24, Z+16	; 0x10
 148:	88 60       	ori	r24, 0x08	; 8
 14a:	80 8b       	std	Z+16, r24	; 0x10
	PORTC.PIN1CTRL |= PORT_PULLUPEN_bm;
 14c:	81 89       	ldd	r24, Z+17	; 0x11
 14e:	88 60       	ori	r24, 0x08	; 8
 150:	81 8b       	std	Z+17, r24	; 0x11
	
    while (1) 
    {
		switches = (PORTA.IN & 0xFC) | (PORTC.IN & 0x03);
 152:	90 91 08 04 	lds	r25, 0x0408	; 0x800408 <__TEXT_REGION_LENGTH__+0x7e0408>
 156:	80 91 48 04 	lds	r24, 0x0448	; 0x800448 <__TEXT_REGION_LENGTH__+0x7e0448>
 15a:	9c 7f       	andi	r25, 0xFC	; 252
 15c:	83 70       	andi	r24, 0x03	; 3
 15e:	89 2b       	or	r24, r25
		leds = 0x00;
		
		for (uint8_t i = 0; i < 8; ++i, switches >>= 1) {
 160:	90 e0       	ldi	r25, 0x00	; 0
	PORTC.PIN1CTRL |= PORT_PULLUPEN_bm;
	
    while (1) 
    {
		switches = (PORTA.IN & 0xFC) | (PORTC.IN & 0x03);
		leds = 0x00;
 162:	20 e0       	ldi	r18, 0x00	; 0
		
		for (uint8_t i = 0; i < 8; ++i, switches >>= 1) {
 164:	06 c0       	rjmp	.+12     	; 0x172 <main+0x66>
			if (switches & 0x01) {
 166:	80 ff       	sbrs	r24, 0
 168:	02 c0       	rjmp	.+4      	; 0x16e <main+0x62>
				leds <<= 1;
 16a:	22 0f       	add	r18, r18
				leds |= 1;
 16c:	21 60       	ori	r18, 0x01	; 1
    while (1) 
    {
		switches = (PORTA.IN & 0xFC) | (PORTC.IN & 0x03);
		leds = 0x00;
		
		for (uint8_t i = 0; i < 8; ++i, switches >>= 1) {
 16e:	9f 5f       	subi	r25, 0xFF	; 255
 170:	86 95       	lsr	r24
 172:	98 30       	cpi	r25, 0x08	; 8
 174:	c0 f3       	brcs	.-16     	; 0x166 <main+0x5a>
			if (switches & 0x01) {
				leds <<= 1;
				leds |= 1;
			}
		}
		PORTB.OUT = ~leds;
 176:	20 95       	com	r18
 178:	20 93 24 04 	sts	0x0424, r18	; 0x800424 <__TEXT_REGION_LENGTH__+0x7e0424>
    }
 17c:	ea cf       	rjmp	.-44     	; 0x152 <main+0x46>

0000017e <_exit>:
 17e:	f8 94       	cli

00000180 <__stop_program>:
 180:	ff cf       	rjmp	.-2      	; 0x180 <__stop_program>
